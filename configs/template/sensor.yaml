- sensor:
  - name: "speakers_on"
    unique_id: "speakers_on"
    attributes:
      friendly_name: "Speakers On"
    icon: mdi:speaker-multiple
    state: >-
      {{ expand(states.media_player) | selectattr('state', 'eq', 'playing') | selectattr('entity_id','in',['media_player.bedroom_speaker','media_player.sonos_one','media_player.lounge_speaker','media_player.kitchen_display']) | map(attribute='entity_id') | list | count }}

- sensor:
  - name: "lights_on"
    unique_id: "lights_on"
    attributes:
      friendly_name: "Lights On"
    icon: mdi:lightbulb-group-outline
    state: >-
      {{ expand(states.light) | selectattr('state', 'eq', 'on') | rejectattr('entity_id','in',['light.all_lights','light.lounge_lights', 'light.aarlo_front_door']) | map(attribute='entity_id') | list | count }}

# - sensor:
#   - name: "humidifier"
#     unique_id: "humidifier"
#     attributes:
#       friendly_name: "Humidifier"
#     icon: mdi:water-percent
#     unit_of_measurement: '%'
#     state: >-
#         {%- if is_state('input_select.humidifier_location', 'Office') == true -%}
#           {{ states('sensor.office_humidity') }}
#         {%- else -%}
#           {{ states('sensor.lounge_humidity') }}
#         {%- endif -%}
#     device_class: humidity

- sensor:
  - name: "gh_next_timer"
    unique_id: "gh_next_timer"
    icon: mdi:timer
    device_class: timestamp
    attributes:
      friendly_name: "Next Timer"
      timer_entity: >
        {%- set timers = expand(['sensor.lounge_speaker_timers','sensor.kitchen_display_timers','sensor.bedroom_speaker_timers'])| rejectattr('state', 'eq', 'unavailable') | list %}
        {% set ns = namespace(time="",entity="",timer_id="") %}
        {% for i in timers %}
          {% if ns.time == ""%}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
          {% elif as_timestamp(i.state) < ns.time %}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
          {% endif %} 
        {% endfor %}

        {{ ns.entity }}
      timer_id: >
        {%- set timers = expand(['sensor.lounge_speaker_timers','sensor.kitchen_display_timers','sensor.bedroom_speaker_timers'])| rejectattr('state', 'eq', 'unavailable') | list %}
        {% set ns = namespace(time="",entity="",timer_id="") %}
        {% for i in timers %}
          {% if ns.time == ""%}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
          {% elif as_timestamp(i.state) < ns.time %}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
          {% endif %} 
        {% endfor %}
        {{ ns.timer_id }}
    state: >-
      {%- set timers = expand(['sensor.lounge_speaker_timers','sensor.kitchen_display_timers','sensor.bedroom_speaker_timers'])| rejectattr('state', 'eq', 'unavailable') | list %}
      {% set ns = namespace(time="",entity="",timer_id="") %}
      {% for i in timers %}
        {% if ns.time == ""%}
          {%- set ns.time = as_timestamp(i.state) %}
          {%- set ns.entity = i.entity_id %}
          {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
        {% elif as_timestamp(i.state) < ns.time %}
          {%- set ns.time = as_timestamp(i.state) %}
          {%- set ns.entity = i.entity_id %}
          {%- set ns.timer_id = i.attributes.timers.0.timer_id %}
        {% endif %} 
      {% endfor %}

      {{ as_datetime(ns.time) }}

- sensor:
  - name: "gh_next_alarm"
    unique_id: "gh_next_alarm"
    icon: mdi:alarm
    device_class: timestamp
    attributes:
      friendly_name: "Next Alarm"
      alarm_entity: >
        {%- set timers = expand(['sensor.lounge_speaker_alarms','sensor.kitchen_display_alarms','sensor.bedroom_speaker_alarms'])| rejectattr('state', 'eq', 'unavailable') | list %}
        {% set ns = namespace(time="",entity="",alarm_id="") %}
        {% for i in timers %}
          {% if ns.time == ""%}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
          {% elif as_timestamp(i.state) < ns.time %}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
          {% endif %} 
        {% endfor %}

        {{ ns.entity }}
      alarm_id: >
        {%- set timers = expand(['sensor.lounge_speaker_alarms','sensor.kitchen_display_alarms','sensor.bedroom_speaker_alarms'])| rejectattr('state', 'eq', 'unavailable') | list %}
        {% set ns = namespace(time="",entity="",alarm_id="") %}
        {% for i in timers %}
          {% if ns.time == ""%}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
          {% elif as_timestamp(i.state) < ns.time %}
            {%- set ns.time = as_timestamp(i.state) %}
            {%- set ns.entity = i.entity_id %}
            {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
          {% endif %} 
        {% endfor %}
        {{ ns.alarm_id }}
    state: >-
      {%- set timers = expand(['sensor.lounge_speaker_alarms','sensor.kitchen_display_alarms','sensor.bedroom_speaker_alarms'])| rejectattr('state', 'eq', 'unavailable') | list %}
      {% set ns = namespace(time="",entity="",alarm_id="") %}
      {% for i in timers %}
        {% if ns.time == ""%}
          {%- set ns.time = as_timestamp(i.state) %}
          {%- set ns.entity = i.entity_id %}
          {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
        {% elif as_timestamp(i.state) < ns.time %}
          {%- set ns.time = as_timestamp(i.state) %}
          {%- set ns.entity = i.entity_id %}
          {%- set ns.alarm_id = i.attributes.alarms.0.alarm_id %}
        {% endif %} 
      {% endfor %}

      {{ as_datetime(ns.time) }}

- trigger:
    - trigger: state
      entity_id:
        - binary_sensor.back_door_person_occupancy
        - binary_sensor.back_door_cat_occupancy
        - binary_sensor.back_door_bicycle_occupancy
      from: "off"
      to: "on"
  sensor:
  - name: "Back Door Last Activity"
    unique_id: "back_door_last_activity"
    state: >-
      {{ now().strftime('%m-%d-%Y %H:%M') }}
    attributes:
      object_type: >-
        {% set match = trigger.entity_id | regex_findall_index('binary_sensor.back_door_(.+?)_occupancy', ignorecase=False) %}
        {{ match if match else 'unknown' }}
    icon: mdi:cctv

- trigger:
    - trigger: state
      entity_id:
        - binary_sensor.front_door_person_occupancy
        - binary_sensor.front_door_cat_occupancy
        - binary_sensor.front_door_car_occupancy
        - binary_sensor.front_door_package_occupancy
      from: "off"
      to: "on"
  sensor:
  - name: "Front Door Last Activity"
    unique_id: "front_door_last_activity"
    state: >-
      {{ now().strftime('%m-%d-%Y %H:%M') }}
    attributes:
      object_type: >-
        {% set match = trigger.entity_id | regex_findall_index('binary_sensor.front_door_(.+?)_occupancy', ignorecase=False) %}
        {{ match if match else 'unknown' }}
    icon: mdi:cctv

- trigger:
  - trigger: time
    id: "midnight"
    at: "00:00:00"
  - trigger: state
    entity_id: sensor.back_door_all_count
  sensor: 
  - name: "Back Door Daily Count"
    unique_id: "back_door_object_daily_count"
    state: >
      {% if trigger.id == "midnight" %}
          0
        {% elif states('sensor.back_door_all_count') | int(0) %}
          {{ states('sensor.back_door_daily_count') | int(0) + states('sensor.back_door_all_count') | int(0) }}
        {% else %}
          {{ states('sensor.back_door_daily_count') | int(0) }}
        {% endif %}
    attributes:
      last_reset: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0).isoformat() }}"
    unit_of_measurement: "count"
    state_class: total

- trigger:
  - trigger: time
    id: "midnight"
    at: "00:00:00"
  - trigger: state
    entity_id: sensor.front_door_all_count
  sensor: 
  - name: "Front Door Daily Count"
    unique_id: "front_door_object_daily_count"
    state: >
      {% if trigger.id == "midnight" %}
          0
        {% elif states('sensor.front_door_all_count') | int(0) %}
          {{ states('sensor.front_door_daily_count') | int(0) + states('sensor.front_door_all_count') | int(0) }}
        {% else %}
          {{ states('sensor.front_door_daily_count') | int(0) }}
        {% endif %}
    attributes:
      last_reset: "{{ now().replace(hour=0, minute=0, second=0, microsecond=0).isoformat() }}"
    unit_of_measurement: "count"
    state_class: total