cardmod:
  ## CSS styling for Sidebar
  card-mod-sidebar-yaml: |
    .: |
      * {
        font-family: "SF Pro Display","Roman-55", "Helvetica Neue";
      }
      .menu .title {
        font-weight: 500;
      }

  ## CSS styling for Entity cards
  card-mod-row-yaml: |
    "*:first-child$": 
      state-badge$: 
        .: |
          :host {
            border: var(--theme-icon-border);
            outline: var(--theme-icon-outline);
            border-radius: 100px;
            overflow: hidden;
          }
          ha-state-icon {
            background: var(--theme-icon-background);
            color: var(--theme-icon-color);
            display: flex;
            align-items: center;
            justify-content: center;
            height: 100%;
            --mdc-icon-size: 20px;

            {% if config.entity and config.entity.endswith('battery') or config.entity.endswith('battery_level') %}
            {% if config.entity and is_state(config.entity, 'unavailable') -%}
            background: var(--theme-icon-background) !important;            
            color: var(--theme-icon-color) !important;
            {% elif config.entity and (states(config.entity) | int(default=0)) < 30 -%}
            background: var(--state-sensor-battery-low-color) !important;
            color: #fff !important;
            {%- elif config.entity and (states(config.entity) | int(default=0)) < 70 -%}
            background: var(--state-sensor-battery-medium-color) !important;
            color: #fff !important;
            {%- endif %}
            {% endif %}

            {% if config.entity and '_bt_' in config.entity and is_state(config.entity, '100') %}
            background: var(--accent-color) !important;
            color: #fff !important;
            {% endif %}
          }

  ## CSS styling for Glance cards
  card-mod-glance-yaml: |
    .: |
      .name {
        font-weight: 600;
        order:2;
      }
      div {
        order:3;
      }
    state-badge$: |        
      :host {
        width: 50px !important;
        height: 50px !important;
        order:1;
      }
      ha-state-icon {
        background: var(--theme-icon-background);
        border: var(--theme-icon-border);
        outline: var(--theme-icon-outline);
        padding: 13px 10px 14px;
        color: var(--theme-icon-color) !important;
        border-radius: 100px;
      }
      ha-state-icon[data-state="normal"], ha-state-icon[data-state="on"] {
        background: var(--accent-color);
        color: #fff !important;
      }
      ha-state-icon[data-domain="switch"][data-state="on"] {
        background: var(--secondary-accent-color, var(--state-switch-active-color, var(--state-active-color)));
        color: #fff !important;
      }
      ha-state-icon[data-domain="device_tracker"][data-state="home"] {
        background: var(--state-device_tracker-home-color, var(--state-device_tracker-active-color, var(--state-active-color)));
        color: #fff !important;
      }
      ha-state-icon[data-domain="sensor"][data-state*="2"], ha-state-icon[data-domain="sensor"][data-state*="1"] {
        background: var(--state-sensor-battery-low-color);
        color: #fff !important;
      }
      ha-state-icon[data-domain="sensor"][data-state*="3"], ha-state-icon[data-domain="sensor"][data-state*="4"], ha-state-icon[data-domain="sensor"][data-state*="5"], ha-state-icon[data-domain="sensor"][data-state*="6"] {
        background: var(--state-sensor-battery-medium-color);
        color: #fff !important;
      }

  ## CSS styling for all cards
  card-mod-card-yaml: |
    .: |      
      ha-card {
        font-family: "SF Pro Display","Roman-55", "Helvetica Neue";
        transition: all 0.2s ease-in-out, height 0s, margin 0s;
      }
      
      ha-card.type-custom-button-card:hover, ha-card.type-custom-mushroom-light-card:hover, ha-card.type-custom-mushroom-person-card:hover, ha-card.type-custom-mushroom-update-card:hover, ha-card.type-custom-mushroom-media-player-card:hover {
        @media (hover: hover) {
          transform: scale(1.05);
          box-shadow:1px 3px 10px rgba(0,0,0,0.05);
        }
      }
      ha-card.remote-area:hover {
        transform: unset;
      }

      ha-card.square {
        aspect-ratio:1;
        max-width:100%;
        max-height:100%;
      }

      ha-card.type-custom-mini-media-player {
        border-width: 1px;
      }

      
      ha-card.tv-remote {
        background: none;
        box-shadow: none;
        margin: 10px;
        font-family: "Roman-55", "Helvetica Neue";
        letter-spacing: 0.2px;
      }
      ha-card.tv-remote .mmp-player__core {
        flex-direction:column-reverse;
      }
      ha-card.tv-remote mmp-powerstrip {
        justify-content:flex-start;
        margin-left:0;
      }
      ha-card.tv-remote .entity__info {
        margin-left:0;
      }

      ha-card.large-media-player {
        min-height: 120px;
        background: linear-gradient(240deg, var(--accent-color) -200%, var(--ha-card-background) 30%);
      }
      ha-card.large-media-player .mmp__bg {
        display:none;
      }
      ha-card.large-media-player .mmp-player {
        align-self: center;
        padding: 14px;
      }
      ha-card.spotify {
        min-height:144px;
        height: 100%;
        aspect-ratio: 1;
      }
      ha-card.spotify .mmp__bg .cover-gradient {
        transform: rotate(-90deg)
      }
      ha-card.spotify .mmp-player {
        align-self: end;
        background: rgba(255,255,255,0.15);
        border-radius: 0 0 20px 20px;
      }
      ha-card.spotify .mmp-player__core {
        flex-direction: row;
        flex-wrap:wrap;
      }
      ha-card.spotify mmp-powerstrip {
        justify-content: space-between;
        margin-left:0;
        flex-basis: 100%;
        order:1;
      }
      ha-card.spotify mmp-source-menu {
        max-width: unset;
      }
      ha-card.spotify .mmp-dropdown {
        background: red;
      }
      ha-card.spotify .entity__icon {
        order:2;
        margin:0;
      }
      ha-card.spotify .entity__info {
        order:3;
        flex: 0 1 100%;
        margin:0;
      }
      ha-card.type-custom-mini-media-player .entity__info__media {
        max-height: var(--mmp-unit);
        display:flex;
        flex-direction:row;
        flex-wrap:wrap;
        justify-content:start;
        opacity:1;
      }
      ha-card.type-custom-mini-media-player [class*="attr_"] {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        flex-basis:100%;
      }
      ha-card.type-custom-mini-media-player [class*="attr_"]::before {
        display:none;
      }
      ha-card.type-custom-mini-media-player .attr__media_title {
        font-weight: 600;
        padding-right: 8px;
      }
      ha-card.type-custom-mini-media-player .attr__media_artist, ha-card.type-custom-mini-media-player .attr__media_artist {
        opacity: 0.75;
      }
      ha-card.type-custom-mini-media-player .attr__media_series_title, ha-card.type-custom-mini-media-player .attr__media_season, ha-card.type-custom-mini-media-player .attr__media_episode {
        opacity: 0.75;
        flex-basis: auto;
      }
      ha-card.type-custom-mini-media-player .attr__media_season::before {
        content: " (";
        display: inline-block;
        padding-left: 4px;
      }
      ha-card.type-custom-mini-media-player .attr__media_episode::before {
        content: " - ";
        display: inline-block;
        padding: 0 4px;
      }
      ha-card.type-custom-mini-media-player .attr__media_episode::after {
        content: ")";
        display: inline-block;
      }
      ha-card.spotify .entity__icon + .entity__info {
        flex-basis: calc(100% - 50px);
      }

      ha-card.temperature {
        flex-direction:row !important;
        flex-wrap:wrap;
      }

      ha-card.temperature .states {
        padding-right: 0 !important;
        flex-basis: calc(45% - 16px);
        padding-bottom:0 !important;
      }

      ha-card.temperature .info {
        padding-left: 0 !important;
        flex-basis: calc(55% - 16px);
        padding-bottom:0 !important;
      }

      ha-card.temperature .info .info__item__time {
        display:none;
      }

      ha-card.type-custom-mini-graph-card .states .state .state__value {
        font-weight: 500;
        letter-spacing: -0.02em;
      }

      ha-card.type-custom-search-card {
        border-width: 1px;
      }
      ha-card.type-custom-search-card #searchContainer {
        width: 100% !important;
        border-width: 1px;
      }
      ha-card.type-custom-search-card #count {
        padding-right: 20px;
      }
      ha-card.type-custom-search-card #searchContainer ha-icon {
        color: #a5a5a5;
      }
      ha-card.type-markdown {
        --paper-card-background-color: 'rgba(11, 11, 11, 0.00)';
        box-shadow: none;
        padding-top: 20px;
        background: none !important;
      }
      ha-card.type-markdown.center {
        padding:0;
        display:flex;
        flex-direction:column;
        justify-content:center;
      }
      ha-card.type-markdown.center ha-markdown {
        padding-top:0;
        padding-bottom:0;
      }
      ha-card.type-glance, ha-card.media-player, ha-card.type-entities, ha-card.type-custom-uptime-card, ha-card.type-gauge, ha-card.type-custom-mini-graph-card, ha-card.type-map  {
        border-width: 1px;
      }
      ha-card.chip {
        letter-spacing: 0.2px;
      }
      ha-card.type-menu, ha-card.type-back {
        background:none;
        border:none;
        # --card-mod-icon-color: var(--accent-color);
      }

      ha-card.type-glance {
        padding: 14px;
      }
      ha-card.type-glance .entities {
        padding:0;
      }
      ha-card.type-glance .entity {
        flex-direction: column;
        margin-bottom: 10px;
      }

      .remote {
        max-width: 280px;
        margin-top: 10px !important;
        border-radius: 10px;
      }
      .remote-ch-vol {
        border-radius: 30px;
        width: 218px;
        margin-left: 0;
        border-width: 1px;
      }
      

      ha-card.type-custom-mushroom-light-card, ha-card.type-custom-mushroom-alarm-control-panel-card, ha-card.type-custom-mushroom-person-card, ha-card.type-custom-mushroom-update-card, ha-card.type-custom-mushroom-media-player-card {
        # padding: 14px;
        border-width: 1px;
        height: calc(100% - 2px);
      }
      ha-card.type-custom-mushroom-media-player-card {
        {% if config.entity and is_state(config.entity, 'playing') %}
        background-image:url('{{ state_attr(config.entity, 'entity_picture') }}') !important;
        {% endif %}
        background-position:center;
        background-size: cover;
        color: #fff;
        position:relative;
        overflow:hidden;
        justify-content:flex-end;
        padding:0;
        min-height: 146px;
        --card-primary-color: #fff;
        --card-secondary-color: #fff;
      }
      ha-card.type-custom-mushroom-media-player-card.large-speaker {
        @media screen and (max-width:870px){
          min-height:377px;
        }
      }
      ha-card.type-custom-mushroom-media-player-card::before {
        display:block;
        content: "";
        background:linear-gradient(to top, rgba(0,0,0,1), rgba(0,0,0,0.2));
        width:calc(100% + 2px);
        height:calc(100% + 2px);
        position:absolute;
        top:0;
        left:0;
        border-radius: 19px;
        z-index:0;
      }
      ha-card.type-custom-mushroom-media-player-card mushroom-card {
        padding: 14px;
        backdrop-filter: blur(0px);
        z-index:1;
        background:rgba(255,255,255,0.05);
        z-index:1;
        border-radius: 0 0 20px 20px;
      }
      ha-card.type-custom-mushroom-media-player-card mushroom-card .container {
        justify-content: flex-end;
      }
      mushroom-card {
        height:100%;
      }
      ha-card.type-custom-mushroom-media-player-card mushroom-button {
        background-color:rgba(255,255,255,0.1);
        border-radius:var(--control-border-radius);
        --icon-color:#fff;
      }
      ha-card[class*="type-custom-mushroom"] {
        # aspect-ratio: 1;
      }
      ha-card.type-custom-mushroom-light-card {
        {% if config.entity and is_state(config.entity, 'on') -%}
        background: linear-gradient(240deg, rgb(var(--rgb-state-light)) -200%, var(--ha-card-background) 30%);
        {%- endif %}
        min-height:141px;
        @media screen and (max-width:870px){
          min-height: 122px;
        }
      }
      ha-card.type-custom-mushroom-light-card mushroom-state-item {
        # place-self: start;
        # width: 100%;
        # display: flex;
        # align-items: start;
        # justify-content: start;
        # margin-bottom: 0;
        # height:100%;
        # {% if config.entity and is_state(config.entity, 'on') and (state_attr(config.entity, 'brightness') |int(default=0)) > 0 -%}
        # height:unset;
        # {%- endif %}
      }
      
      ha-card.type-custom-mushroom-light-card .actions {
        # margin-top: 3px;
      }
      ha-card.battery {
        background: red;
      }
      ha-card.type-custom-mushroom-person-card {
        {% if config.entity and is_state(config.entity, 'home') %}
        background: linear-gradient(240deg, rgb(var(--rgb-state-person-home)) -200%, var(--ha-card-background) 30%);
        {% else %}
        background: linear-gradient(240deg, rgb(var(--rgb-state-person-not-home)) -200%, var(--ha-card-background) 30%);
        {% endif %}
      }
      ha-card.type-custom-mushroom-update-card {
        {% if config.entity and is_state(config.entity, 'on') %}
        background: linear-gradient(240deg, rgb(var(--rgb-state-update-on)) -200%, var(--ha-card-background) 30%);
        {% endif %}
      }
      ha-card.type-custom-mushroom-alarm-control-panel-card {
        {% if config.entity and is_state(config.entity, 'armed_away') %}
        background: linear-gradient(240deg, rgb(var(--rgb-state-alarm-armed)) -200%, var(--ha-card-background) 30%);
        {% elif config.entity and is_state(config.entity, 'armed_home') %}
        background: linear-gradient(240deg, rgb(var(--rgb-orange)) -200%, var(--ha-card-background) 30%);
        {% elif config.entity and is_state(config.entity, 'triggered') %}
        background: linear-gradient(240deg, rgb(var(--rgb-state-alarm-triggered)) -200%, var(--ha-card-background) 30%);
        {% endif %}
      }

      ha-card.remote-area #container #area {
        box-shadow: var(--box-shadow);
      }
      

      @media screen and (max-width: 870px){
         ha-card .top {
          padding-top: 20px !important;
          padding-bottom:68px !important;
        }
        ha-card .pin { 
          top:0 !important;
          position: fixed !important;
          width: 100% !important;
        }
        ha-card .bar {
          bottom: 68px !important;
          position: sticky !important;
        }
      } 

    mmp-media-controls$: |
      :host {
        flex-direction:column;
      }
      .mmp-media-controls__media {
        width:100%;
        gap:10px;

      }
      .mmp-media-controls__media ha-icon-button {
        background:var(--background-color) !important;
        border-radius: 12px;
        border: 1px solid var(--ha-card-border-color);
        justify-content: center;
        width:100%;
        display:flex;
        # --mmp-text-color: #fff;
      }

    mushroom-media-player-volume-control$:
      mushroom-button-group$: |
        .container ::slotted(mushroom-button) {
          background-color:rgba(255,255,255, 0.15) !important;
          border-radius: var(--control-border-radius);
          --icon-color:#fff;
        }
        .container ::slotted(mushroom-slider) {
          background-color:rgba(255,255,255, 0.15) !important;
          border-radius: var(--control-border-radius);
          --icon-color:#fff;
        }
    mushroom-media-player-media-control$:
      mushroom-button-group$: |
        .container ::slotted(mushroom-button) {
          background-color:rgba(255,255,255, 0.15) !important;
          border-radius: var(--control-border-radius);
          --icon-color:#fff;
        }

    "#searchContainer": 
      "ha-textfield$": |
        label {
           background:none !important;
         }
         .mdc-line-ripple, .mdc-text-field__ripple {
           display:none !important;
         }
          

    "#searchContainer paper-input$": 
      paper-input-container$: |
        :host {
          padding:8px;
        }
        .underline {
          display:none !important;
        }

    "#searchContainer paper-input ha-icon-button$": 
      mwc-icon-button$: |
        button { 
          padding: 5px 10px 10px 10px !important;
          width: 40px !important; 
          height: 40px !important;
        }

    ha-map$: |
      .leaflet-bar a {
        background-color: var(--card-background-color);
        color: var(--primary-text-color);
      }
      .leaflet-marker-icon {
        color: var(--primary-text-color); !important;
      }

    # mushroom-card$: |
    #   .container {
    #     justify-content: flex-end !important;
    #   }
      
    mushroom-state-item$: |
      .container {
        width:100%;
      }
      .container.vertical {
        height:100%;
        gap: 10px;
        align-items: flex-start;
      }
      .container.vertical .icon {
        margin-bottom: 0 !important;
        # min-height: 75px;
        height:100%;
        # place-self: start;
        @media screen and (max-width: 870px){
          # min-height: 56px;
        }
      }
      .container:not(.vertical) .icon ::slotted(mushroom-shape-icon) .shape ::slotted(*) {
        --mdc-icon-size: 24px;
        background:red;
      }
      {% if config.entity and is_state(config.entity, 'on') and (state_attr(config.entity, 'brightness') |int(default=0)) > 0 -%}
      .container.vertical { 
        flex-direction: row !important;
        gap: 6px;
        padding-bottom: 10px;
        # margin-bottom: 5px;
      }
      .icon {
        min-height: unset !important;
      }
      {%- endif %}

    mushroom-state-info$: | 
      .primary {
        letter-spacing: 0.2px;
        text-align: left;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
      }
      .secondary {
        letter-spacing: 0.2px;
        text-align: left; 
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;  
        text-transform: capitalize;
      }
      {% if config.entity and is_state(config.entity, 'on') and (state_attr(config.entity, 'brightness') |int(default=0)) > 0 -%}
      .secondary { 
        # display:none; 
      }
      {%- endif %}



    mushroom-shape-avatar$: |
      .container {
        width:50px !important;
        height: 50px !important;
        border-radius: 100px;
        border: var(--theme-icon-border);
        outline: var(--theme-icon-outline);
        @media screen and (max-width: 870px){
          width:40px !important;
          height: 40px !important;
        }

      }

    mushroom-shape-icon$: |
      .shape {
        background: var(--icon-color) !important;
        padding: 5px;
        border: var(--theme-icon-border);
        outline: var(--theme-icon-outline);
        {% if config.entity and is_state(config.entity, 'disarmed') %}
        background: var(--theme-icon-background) !important;
        {% elif config.entity and is_state(config.entity, 'armed_home') %}
        background: rgb(var(--rgb-orange)) !important;
        {% endif %}
        {% if config.entity and is_state(config.entity, 'on') and (state_attr(config.entity, 'brightness') |int(default=0)) > 0 %}
        width: 30px !important;
        height: 30px !important;
        {% endif %}
      }
      
      .shape.disabled {
        background: var(--theme-icon-background) !important;
      }
      .shape ::slotted(*) {
        color: #fff !important;
        {% if config.entity and is_state(config.entity, 'disarmed') %}
        color: var(--theme-icon-color) !important;
        {% endif %}
        {% if config.entity and is_state(config.entity, 'on') and (state_attr(config.entity, 'brightness') |int(default=0)) > 0 %}
        --mdc-icon-size: 24px;
        {% endif %}
      }
      @media screen and (max-width: 870px){
        .shape {
          --icon-size: 30px;
        }
        .shape ::slotted(*) {
          --mdc-icon-size: 24px;
        }
      }
      .shape.disabled ::slotted(*) {
        color: var(--theme-icon-color) !important;
      }
      
      .shape ha-state-icon {
        --mdc-icon-size:28px !important;
        color: #fff !important;
        @media screen and (max-width: 870px){
          --mdc-icon-size: 24px !important;
        }
      }
      .shape.disabled ha-state-icon {
        color: var(--theme-icon-color) !important;
      }
      {% if config.entity and is_state(config.entity, 'disarmed') %}
      .shape {
        background: var(--theme-icon-background) !important;
      }
      .shape ha-state-icon {
        color: var(--theme-icon-color) !important;
      }        
      {% endif %}
    mushroom-light-color-control$: 
      mushroom-slider$: |
        .container {
          # height:36px !important;
        }
    mushroom-light-brightness-control$:
      mushroom-slider$: |
        .container {
          # height:36px !important;
        }
        .slider .slider-track-indicator {
          border-radius: 0 !important;
        }

    mmp-powerstrip$: 
      mmp-source-menu$:
        .: |
          :host { max-width: unset !important; }
        mmp-dropdown$: 
          mmp-button$: |
            .container .slot-container {
              margin-left: 0;
            }            
          .: |
            mmp-button .mmp-dropdown__label {
              font-weight: 400;
              font-size: 13px;
              opacity:0.75;
            }
      .: |
        card-mod {
          display:none;
        }

    ha-markdown$: |
        :host {
          padding-left: 16px !important;
          padding-right: 10px !important;
        }
        ha-markdown-element {
          font-size:10px;
          font-family: "SF Pro Display","SF Pro Icons","Helvetica Neue","Helvetica","Arial",sans-serif;
          letter-spacing: 0.2px;
        }
        h1 {
          font-size: 26px;
          margin-bottom:5px;
          font-weight: 600 !important;
          line-height: 1.07143 !important;
          letter-spacing: -.005em;
        }
        h2 {
          font-size: 16px !important;
          margin-top:0;
          font-weight: 500 !important;
          letter-spacing: -.005em;
          line-height:1.10722 !important;
          color: var(--secondary-text-color);
        }

  ## More Info
  card-mod-more-info: |
    $: |
      .mdc-dialog__scrim {
        backdrop-filter: blur(8px);
        -webkit-backdrop-filter: blur(8px);
        background:var(--background-color) !important;
      }
      .mdc-dialog__surface {
        background:var(--background-color) !important;
        border-radius:10px !important;
        box-shadow:var(--mdc-dialog-box-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.1), 0px 24px 38px 3px rgba(0, 0, 0, 0.1)) !important;
      }
      ha-paper-dialog {
        border-radius:10px;
      }
      ::-webkit-scrollbar {
        display: none;
      }
      ha-dialog {  
        --ha-dialog-border-radius: 16px !important;
        
        @media (max-width: 450px), (max-height: 500px) {
          --mdc-dialog-max-width: 90vw !important;
          --mdc-dialog-min-width: 90vw !important;
          --mdc-dialog-min-height: 90vh !important;
          --mdc-dialog-max-height: 90vh !important;
          --vertical-align-dialog: center !important;
          box-shadow:var(--mdc-dialog-box-shadow, 0px 11px 15px -7px rgba(0, 0, 0, 0.1), 0px 24px 38px 3px rgba(0, 0, 0, 0.1)) !important;
        }
      }
    ha-header-bar:
      $: |
        :host {
            border-bottom:0 !important;
        }
        .mdc-top-app-bar {
            background:none !important;
        }
        .mdc-top-app-bar__title {
            opacity:0;
        }
    mwc-tab-bar:
      $: |
        :host {
            border-bottom:0 !important;
        }

  ## Header
  card-mod-root-yaml: |
    .: |
      # /* Hide the left/right arrows */
      # mwc-icon-button[slot="trigger"] > ha-svg-icon {
      #   display: none;
      # }
      # mwc-icon-button[slot="trigger"]::after {
      #   font-size: 22px;
      #   height: 20px; 
      #   width: 100px;
      #   margin-left: 0px;
      #   margin-right: 0px;
      #   content: "{{ states('sensor.time') }}";
      #   position: absolute;
      #   top: 14px;
      #   right: 0px;
      # }
      /* Change the tabs */
      ha-tabs {
        --paper-tabs-selection-bar-color: var(--accent-color) !important;
        direction: unset !important;
        justify-content:center !important;
      }
      /* This changes the color of the currently selected tab. */
      paper-tab {
        # width:calc((100% / 6));
      }
      paper-tab[aria-selected=true] {
        color: var(--accent-color) !important;
      }
      /* This hides the help button. */
      a.menu-link[target="_blank"] {
        display: none;
      }
      /* Move header to bottom */

      @media screen and (max-width:870px){
        #view {          
          padding-top: 0 !important;
          padding-bottom: 68px !important;
        }
        
        #view hui-view vertical-layout$: |
           #columns {
              padding-bottom: 68px !important;
            }
        div:not(.edit-mode) .header {
          top: unset !important;
          bottom:0;
          position:fixed;
          box-shadow: 0 0 20px rgba(0,0,0,0.08) !important;
          height: 68px !important;
        }
        # .edit-mode .header {
        #   top: 0 !important;
        #   bottom: unset;
        # }
        .toolbar {
          height: 68px !important;
        }
        .edit-mode #view {
          margin-top: calc(var(--header-height) + 60px) !important;
        }
        ha-menu-button {
          display: none !important;
        }  
      } 
    ha-app-layout$: |
      @media screen and (max-width:870px){
        #contentContainer {
          padding-top: 0 !important;
          padding-bottom: 68px !important;
        }
      }
    ha-tabs$: |
      :host {
        # background: red !important;
      }
      @media screen and (max-width:870px){
        paper-icon-button {
          display:none !important
        }
        #tabsContent {
          width: 100% !important;
        }              
        #tabsContent slot {
          width:100%;
          display:grid;
          grid-template-columns: repeat(6,1fr);
          height:100%;
        }
        #selectionBar {
          bottom: unset !important;
          border-bottom-width: 2.5px !important;
        }
      }
